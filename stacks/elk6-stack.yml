version: '3'

services:

  elasticsearch:
    image: "bennyr/elasticsearch:6.2.1"
    #image: "docker.elastic.co/elasticsearch/elasticsearch:6.1.1"
    #image: "bennyr/esalpinecors"
    #image: "bennyr/elasticsearch:5.6.4-alpine"
    environment:
      - SERVICE_NAME=elasticsearch
#      - cluster.name=docker-cluster
#      - bootstrap.memoryy_lock=true
#      - "discovery.zen.ping.unicast.hosts=elasticsearch"
#      - "ES_JAVA_OPTS=-Xms2G -Xmx2G"
#      - http.cors.enabled="true"
#      - http.cors.allow-origin="*"

    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.type == eshost
      #resources:
      #  limits:
      #    memory: 4G

    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300

    networks:
      - esnet

  kibana:
    image: "docker.elastic.co/kibana/kibana:6.2.1"
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9200"

    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

    ports:
      - 5601:5601

    networks:
      - esnet

    depends_on:
      - "elasticsearch"

  # eshead:
  #   image: mobz/elasticsearch-head:5
  #   deploy:
  #     replicas: 1
  #     restart_policy:
  #       condition: on-failure

  #   ports:
  #     - 9100:9100

  #   networks:
  #     - esnet

  #   depends_on:
  #     - "elasticsearch"

  # Cerebro Elasticsearch client
  #cerebro:
  #  image: yannart/cerebro:latest

  #  deploy:
  #    replicas: 1
  #    restart_policy:
  #      condition: on-failure

  #  ports:
  #    - "9090:9000"
  #  networks:
  #    - esnet

volumes:
  esdata:
    driver: local

networks:
  esnet:
    driver: overlay
